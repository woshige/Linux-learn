1、docker容器的创建命令
   首先从拉取一个centos镜像  docker pull centos
   docker run 
     OPTIONS  
            -t 启动一个伪终端
            -i 以交互式进行启动通常与i进行连用
            --name 将启动的容器进行别名
            
   docker ps 查看docker上启动了几个容器（默认显示的是正在运行的容器）。
     OPTIONS 
            -a 正在运行和历史运行的容器
            -l 查看上一个启动的容器
            -n number 上三次的容器
     退出容器：
         exit   退出并关闭容器
         ctrl + P + Q  退出且容器在后台运行
     启动容器
         docker start -i name|id
     重启容器 
         docker restart name|id
     停止容器
         docker stop name|id
     强制停止容器 
         docker kill name|id
     删除容器 
         docker rm name|id
     一次性删除多个容器
         docker rm $(docker ps -qa)
         docker ps -qa | xargs docker rm
     后台运行容器
         docker run -d 
         执行docker ps 之后，显示容器没有在运行。
         是因为docker运行的时候一定要使用一个前台的程序。
1、docker容器的创建命令
   首先从拉取一个centos镜像  docker pull centos
   docker run 
     OPTIONS  
            -t 启动一个伪终端
            -i 以交互式进行启动通常与i进行连用
            --name 将启动的容器进行别名
            
   docker ps 查看docker上启动了几个容器（默认显示的是正在运行的容器）。
     OPTIONS 
            -a 正在运行和历史运行的容器
            -l 查看上一个启动的容器
            -n number 上三次的容器
     退出容器：
         exit   退出并关闭容器
         ctrl + P + Q  退出且容器在后台运行
     启动容器
         docker start -i name|id
     重启容器 
         docker restart name|id
     停止容器
         docker stop name|id
     强制停止容器 
         docker kill name|id
     删除容器 
         docker rm name|id
     一次性删除多个容器
         docker rm $(docker ps -qa)
         docker ps -qa | xargs docker rm
     后台运行容器
         docker run -d 
         执行docker ps 之后，显示容器没有在运行。
         是因为docker运行的时候一定要使用一个前台的程序。
     docker日志
         docker logs -f -t --tail  id
                  -f 显示最新的
                  -t 加上时间戳
                  --tail 

