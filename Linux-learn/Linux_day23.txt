1、RAID
    Redundant  Arrays of Inexpensive Disks  独立冗余磁盘阵列
	    当主机的磁盘发生损坏的时候，导致业务终止，导致数据丢失。早期的硬盘的io能力是有限的。所以对于业务来说，业务的瓶颈是io的能力有限的现状。
	    就是将多个硬盘组织起来：
	         （1）提高耐用性（多个磁盘并行读写，提升有限，增加了内存，但是断电的问题，增加了电池）
	         （2）提高耐用能力 （通过磁盘冗余实现）
	    级别：磁盘组织在一起的工作方式是不同的
	       RAID组织方式：
	          外接式磁盘阵列：通过扩展卡或者适配器提供适配能力。
	          内接式RAID：主板提供RAID控制器
	          Software RAID：
    级别：level
        RAID-0：0 条带卷  strip   将数据分成了一个一个的块，然后将块分散至不同的硬盘进行存储，所以提升了存储的速度。
                但是没有提升了耐用性，反而降低了耐用性。所以这种机制不适合作为存储可靠的数据。可以作为缓存系统（但是不适合），swap等。
                可用空间：N * min(n1,n2,...)
                最少磁盘数：2
        RAID-1：1 镜像卷  mirror
                每一个硬盘上都存了一份数据，可以允许一块硬盘坏掉。读的性能提升了，写要保证完整的存储（写性能略微下降）。
                可用空间1 * min(n1,n2,n3...)
                容错能力：有
                最少磁盘数：2
        RAID-2：
        ...
        RAID-4:将三块或者以上的硬盘组织成一个RAID，假设3个，前2个存储数据的chunk，最后一个存储的是前2个的按位异或的结果（校验）。
               如果其中的一个磁盘坏的话，可以根据其中没有坏的磁盘与存储校验的磁盘进行异或操作，可以修复毁坏的磁盘的结果。
               每次读取的时候，要用最后的一个硬盘进行校验操作，所以最后一个盘的访问的压力过大，成为性能瓶颈。
        RAID-5：轮流做校验盘的机制，平衡了校验盘的压力。
                一般是左对称，读写性能提升，可用空间 (n - 1) * min(n1,n2,...)
                容错能力：有，一块磁盘
                最小磁盘数：3个
        RAID-6：校验码存两次，最少的盘为四块。读写性能提升，可用空间为 (n - 2) * min(n1,n2...)
                容错能力：允许坏两块
                最小磁盘数：4块
       混合类型：
        RAID-10：先RAID1，然后RAID0 先镜像，再切割
                 读写性能提升，可用空间 n * min (n1,n2...) / 2 
                 容错能力：每组镜像只能坏一块。 
        RAID-01：先RAID0，然后RAID1 先切割，再做镜像
        RAID-50：不可靠  最少6个
        RAID-7 ：
       JBOD：Just a Bunch of Disks
           将多块磁盘的空间合并成一个大的空间使用，可用空间为 n1 + n2 + n3...
       实现方式：
            硬件：
            软件：

            如何软件实现软RAID
               centos6：结合kernel中的模块，md模块(multi devices)
               mdadm：模式化工具
                      mdadm [mode] <raiddevice> [options] <component-devices>
                      支持的级别：LINEAR RAID-0 RAID-1 RAID-4 RAID-5 RAID-6 RAID
                      模式：
                          创建：-C
                          装配：-A
                          监控：-F
                          管理：-f -r -a
                      <raiddevice>   /dev/md#   centos6或者centos7重启之后，命名会发生变换（指定卷标，指定uuid）
                      <component-devices>  任意的块设备
                      -C：创建模式
                        -n # 几块盘来进行了创建
                        -l # RAID级别
                        -a {yes|no} 是否自动创建目标RAID的设备文件
                        -c size  指明的chunk的大小
                        -x # 指定空闲盘的个数，不支持冗余能力的空闲盘是没有意义的，比如RAID-0
                        例子：mdadm -C /dev/md0 -n 3 -x 1 -l 5 -a yes /dev/sda{5,6,7,8}
                              对RAID设备进行了格式化：mke2fs -t ext4 /dev/md0
                              将设备进行挂载 mount /dev/md0 /root/mydata
                              将其中的RAID盘中的一个标记为损坏   mdadm  /dev/md0 -f /dev/sda5
                              移除 mdadm /dev/md0  -r /dev/sda5
                              增加 mdadm /dev/md0  -a /dev/sda5