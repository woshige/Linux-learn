egrep =  grep -e
  扩展正则表达式的元字符：
            字符匹配：
                     . 
                     []
                     [^]
            次数匹配：
                      *
                      ? 0 或 1 不用\     
                      +
                      {m}
                      {m,n}
             锚定：
                      ^
                      $
                      \< \b
                      \> \b
             分组：
                      ()
                    后向引用  \1 \2 \3...
             或者：
                   a|b
                       C|cat   c或者是Cat
                       (C|c)at  Cat cat
     练习：
              1、显示当前的系统root、centos或user1用户默认的shell和UID
                           grep  -E '^(root|centos|user1)\>' /etc/passwd | cut -d: -f 3,7
              2、找出/etc/rc.d/init.d/functions 文件中（centos6）某单词后面跟的一个小括号的行
                           grep -E -o '^[_[:alpha:]]+\(\)' /etc/rc.d/init.d/functions
              3、使用echo输出一个绝对路径，使用egrep取出基名
                           echo /etc/rc.d/rc.local/ | grep -E -o '[^/]+/?$' | cut -d/ -f 1
                           进一步使用egrep找出dirname
                           echo /etc/rc.d/init.d/  | grep -o '/.*/[[:alpha:]]'| grep -o '.*/'
              4、找出ifconfig命令中结果1-255中的数值
                           ifconfig | grep -E '[1-255]'
              5、找出ifconfig中的IP地址
fgrep：不基于正则表达式进行匹配
   egrep练习   https://blog.csdn.net/qq_27754983/article/details/73693147
 bash的基础特性
            变量类型：存储格式、存储格式大小、参与运算种类

               字符型：
               数值型：
                       整型
                       浮点型
               强类型：定义变量时必须指定类型，参与运算必须符合类型要求
               弱类型：定义变量时无需制定类型，默认均为字符型，参与运算时会自动隐式进行转换。
               shell是一种弱引用类型           
       bash中的变量种类
              根据变量生效范围标准：
                  本地变量：本地的shell进程中，当前shell的其他shell进程是或者是当前进程的子shell或者父shell无效的
                  环境变量：当前的shell进程和子进程   declare -x name=slc
                  局部变量：生效的范围为当前shell进程中某片代码片段（通常指函数） 
                  位置变量：向脚本传递参数    $1 $2 $3 通过命令行传递参数
                  特殊变量  $0命令本身 $?成功失败？$*    $#   $@
               pstree 查看系统中进程树   bash 进入子shell
               本地变量：
                   变量赋值： name='value'   将value的值赋值到name的存储的空间中去
                           value可以为直接字串
                           value可以为变量引用
                           命令引用：将命令的执行的结果赋值给name=`COMMAND`，name=$(COMMAND)
                   变量引用：${name}  大多数的情况下是可以省略的
                             "" ：弱引用，其中的变量引用不会被替换为变量值
                             ''  ： 强引用，其中的变量引用不会被替换
                   显示已定义的所有的变量：
                           set
                   销毁变量：unset name
                环境变量：
                    变量声明、赋值：
                          export name=VALUE
                          declare -x name=VALUE
                          定义环境变量的方式：
                              name=hello   declare -x name
                              declare -x name=hello
                     显示所有的变量：
                        export
                        env 
                        printenv
                      销毁变量：
                                unset name
                       bash有许多内建的环境变量：PATH  SHELL UID  HISTSIZE  HOME
                       PWD OLD  PS1
                       变量命名法则：
                             不能使用程序中的保留字，if for
                             只能使用数字、字母以及下划线、而且不能以数字开头
                             见名知义
                       只读变量：readonly name
                                       declare -r name
                 位置变量：
                        在脚本代码中调用通过命令行传递给脚本的参数：
                           $1  $2 ...
                           $0
                           $* 传递给脚本的所有的参数  所有的参数当做一个字符串
                           $@ 传递给脚本的所有的参数
                           $# 传递给脚本的个数 
                        shift：对第一个参数进行剔除
                        shift：对前n个参数进行剔除
                   例子：对文件进行行数的统计
                           linecount="$(wc -l $1 | cut -d' ' -f1)"
                           echo "$1 has $linecount lines"
         