vim编辑器
    
      vi：Visual  Interface  文本编辑器
      文本数据：ASCII或者Unicode（国际通行16位二进制）
      文本编辑种类：
                行编辑器：sed
                全屏编辑器：nano ，vi
      VIM - vi improved
      使用：模式化的编辑器
          不同的模式的情况下，不同的按键命令是不同的。
             命令模式
             输入模式
             末行模式
                       内置的命令行接口
             打开文件：
                     vim [OPTION] 文件
                     vim +#   ：打开文件后直接让光标处于低#行的行首
                     +PATTERN ：打开文件后，直接让光标位于第一次匹配到的字符
                     vim + ：文件的最后一行
             模式转换：
                     i：insert 光标原处插入
                     a：append 追加，在光标所在处的后面进行插入
                     o：在当前光标的所在行处下方打开一个新行，并转换为插入模式
                     I：在当前光标的所在行的行首输入
                    A：在当前光标的所在行的行尾输入
                    O：在当前光标所在的行的上方进行输入
                    c：
                    C：
            从输入模式回到命令模式  ESC键
            命令模式到末行模式     :
            末行模式到编命令模式     :
            关闭文件：
                :q 退出
                :q! 不保存退出，丢弃所做的修改。
                :wq 保存退出
                :x 保存退出
                : wq  /PATH/TO/SOMEWHERE
                命令模式：zz 表示保存退出
       光标跳转
               
              字符间跳转：
                      h,j,k,l
                         h：左
                         l：右
                         j：下
                         k：上
                 指定个数的字符    #l  10l 向右跳转#个
              单词间的跳转
                      w 当前或下一个单词的词首
                      b  当前上一个单词的词首
                      e：
              行首行尾跳转
                      ^：跳转至行首的第一个非空白字符
                      0：跳转至行首（可以为空白字符）
                      $：行尾
               行间移动
                      j k 
                      #G：跳转至指定的行
                       G：跳转至行的尾部
                       gg或者1G：跳转至第一行
                句间移动：
                       ） 下一个句子
                       (    上一个句子
                 段落间移动
                       {  上一个段落
                       }  下一个段落
       vim 编辑命令：
                字符编辑：
                       x： 删除贯标处的单个字符
                       #x：删除光标处起始的第#个字符
                       xp：交换光标处的字符以及光标所在处后的字符的位置
                 删除命令：可结合光标跳转字符，实现范围删除
                            d$ 删除光标到行尾的字符
                            d^
                            d0
                            dw 
                            de
                            db
                            #COMMAND
                              dd 表示删除一个整行
                                     #COMMAND 光标所在处的行向下删除 #行
                    注意：删除的内容值在vim中的缓冲区中的，所以删除是可以撤销，还可以粘贴
                         删除可以撤销n次，但是粘贴只能使用一次。
                  粘贴命令：
                        p  put paste
                        p：缓冲区中存储的是整行，则粘贴当前光标所在行的下方，否则，
                                       粘贴至光标所在处的后面
                        P：缓冲区存的如果是整行，粘贴的是光标所在的上方，否则粘贴至光标的前面
                  复制命令（y yank）
                        工作行为与d命令相似
                       y$复制到行尾
                       y0
                       y^
                       ye
                       yw
                       yb
                              #COMMAND 次数定义
                       yy 复制一个整行
                                #yy  复制多行
                                     
                  改变命令：（change c）
                       c   执行完毕之后从命令模式转换为输入模式 
                          c$
                          c0
                          cb
                          ce
                          cw
                                    #COMMAND
                          cc  删除并输入新的内容
                          #cc 
                   替换命令：
                         ra    将字符替换为a，但是模式不会发生变换。
                         7rv   将光标所在和光标所在时候的7个位置换为v
      其他编辑操作
          可视化模式：
                    使用v命令 
                    大写V键 ：整行全部进行圈定。
                    经常结合编辑命令使用   
                          d,c,y
          撤销操作：撤销此前的编辑（将此前的n次：默认的为50次存在缓冲区中）
             undo：撤销此前的操作
                  #u   撤销此前指定的次数
             撤销此前的撤销
               ctrl + r  
             .  重复上次的编辑操作
                          
                             
       翻屏操作
             Ctrl + f  向文件尾部翻一屏
             Ctrl + b 向文件首部翻一屏
             Ctrl + d 向文件尾部翻半屏
             Ctrl + u 向文件首部翻半屏
  vim中的末行模式
            内建的命令行接口
            （1）地址定界
                       :start_pos,end_pos
                             1 表示的是第一行
                             1,3 具体的第1到第3行
                             1,+1   从左侧起始加上右侧数字表示的行数
                       1,2d 将第一行到第2行进行删除
                        .  表示第一行
                        $ 最后一行
                        % 全文 1,$
                  /pat1/,/pat2/ 表示从第一次被pat1匹配到的行一直到第一次被pat2匹配到的行结束中间的所有。
                  #,/pat1/ 
                 /pat/,$
               使用方式：
                      后跟一个编辑命令
                          d
                          y 
                          w   /PATH/TO/SOMWHERE 将范围内的行另存至指定的文件中
                          1,20w /tmp/test 另存
                        : 100r /etc/issue  表示从 /etc/issue读取并插入到本文件中100行中
            （2）查找
                   /PATTHERN  \<root\> 从当前光标所在处从文件的尾部进行查找
                   ?PATTHERN  从当前光标所在处向文件首部进行查找
                           n 同方向
                           N 反方向
             （3）查找并替换
                    s:末行模式下完成查找替换操作
                          s/要查找的内容/要替换的内容/   修饰符
                             要查找的内容：可使用模式（基本正常表达式）
                             要替换的内容：不能使用模式，但可以使用  \1 \2 ....等后向引用符号
                             修饰符：
                                      i 忽略大小写
                                      g  全局替换  默认情况下，每一行只会替换第一次出现
                                 .,$s/r\(..\)t/R\1Tg
                                 %s/l...x/&er
                                 %s/\/etc\/fstab/\/var\/log
1、复制 /etc/grub2.cfg 至 /tmp/目录，用查找替换命令去删除 /tmp/grub2.cfg中的空白字符
       %s/^[[:space:]]\+//
2、复制 /etc/rc.d/init.d/functions 文件至/tmp 目录，用查找的命令为/tmp/functions的
每行开头为空白字符的行的行首添加一个#号
%s/^[[:space:]]\+/#&/